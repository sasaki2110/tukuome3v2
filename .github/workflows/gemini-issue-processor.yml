name: Gemini Issue Processor

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'The number of the issue to process'
        required: true

permissions:
  issues: write

jobs:
  process-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get issue data
        id: get_issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.issue_number }}
            });
            return { title: issue.data.title, body: issue.data.body };
          result-encoding: json

      - name: Install and Run Gemini CLI
        id: gemini_process
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          ISSUE_TITLE: ${{ fromJson(steps.get_issue.outputs.result).title }}
          ISSUE_BODY: ${{ fromJson(steps.get_issue.outputs.result).body }}
        run: |
          npm install -g @google/gemini-cli
          PROMPT=$(cat <<'EOF'
          „ÅÇ„Å™„Åü„ÅØÂÑ™ÁßÄ„Å™„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éû„Éç„Éº„Ç∏„É£„Éº„Åß„Åô„ÄÇ
          ‰ª•‰∏ã„ÅÆGitHub issue„ÅÆÂÜÖÂÆπ„ÇíÂàÜÊûê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

          1.  „Åæ„Åöissue„ÅÆÂÜÖÂÆπ„ÇíÁ∞°ÊΩî„Å´Ë¶ÅÁ¥Ñ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ
          2.  Ê¨°„Å´„Åì„ÅÆissue„ÇíËß£Ê±∫„Åô„Çã„Åü„ÇÅ„Å´ÂøÖË¶Å„Å™ÂÖ∑‰ΩìÁöÑ„Å™„Çø„Çπ„ÇØ„ÇíÁÆáÊù°Êõ∏„Åç„Åß„É™„Çπ„Éà„Ç¢„ÉÉ„Éó„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

          ---
          **Issue Title: ${ISSUE_TITLE}**
          **Issue Body:**
          ${ISSUE_BODY}
          EOF
          )
          GEMINI_RESPONSE=$(gemini --yolo --prompt "${PROMPT}")
          echo "gemini_response<<EOF" >> $GITHUB_OUTPUT
          echo "${GEMINI_RESPONSE}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Debug Gemini Output
        run: |
          echo "--- Start Debug Info ---"
          echo "The following output should be passed to the next step:"
          echo "${{ steps.gemini_process.outputs.gemini_response }}"
          echo "--- End Debug Info ---"

      - name: Comment on issue with Gemini's output
        uses: actions/github-script@v7
        env:
          GEMINI_RESPONSE: ${{ steps.gemini_process.outputs.gemini_response }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `ü§ñ Gemini„Å´„Çà„ÇãÂàÜÊûêÁµêÊûú„Åß„ÅôÔºö\n\n${process.env.GEMINI_RESPONSE}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.issue_number }},
              body: body
            });
